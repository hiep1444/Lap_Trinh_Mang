package main;


import Handle.FileDownloader;
import Handle.RunnableServerFile;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.Socket;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Base64;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acer
 */
public class theClient extends javax.swing.JFrame {
//1571020100
    private File currentFile ;
    Source OOP = new Source();
    String username, address = "localhost";
    ArrayList<String> users = new ArrayList();

    Boolean isConnected = false;

    Socket theSocket;
    BufferedReader theReader;
    PrintWriter theWriter;

    public void ListenThread() {
        //1571020100
        Thread IncomingReader = new Thread(new Message());
        IncomingReader.start();
    }

    public void userAdd(String data) {
        //1571020100
        users.add(data);
    }

    public void userRemove(String data) {
        //1571020100
        sentMessage.append(data + " is now offline.\n");
    }

    public void writeUsers() {
        //1571020100
        String[] tempList = new String[(users.size())];
        users.toArray(tempList);
        for (String token : tempList) {

        }
    }

    public void sendDisconnect() {
        //1571020100
        String bye = (username + ": :Disconnect");
        try {
            theWriter.println(bye);
            theWriter.flush();
        } catch (Exception e) {
            sentMessage.append("You're not connected.\n");
        }
    }

    public void Disconnect() {
        //1571020100
        try {
            sentMessage.append("Disconnected.\n");
            theSocket.close();
        } catch (Exception ex) {

        }
        isConnected = false;
        client_Name.setEditable(true);

    }

    public theClient() {
        //1571020100
        UIManager.LookAndFeelInfo[] lafInfo = UIManager.getInstalledLookAndFeels();
        try {
            UIManager.setLookAndFeel(lafInfo[3].getClassName());
        } catch (Exception e) {
        }
        initComponents();
        btnGui.setVisible(false);
        btnHuy.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sentMessage = new javax.swing.JTextArea();
        Message = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        client_Name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Send = new javax.swing.JLabel();
        disConnect = new javax.swing.JLabel();
        isConnnected = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        imgPreview = new javax.swing.JLabel();
        btnGui = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        btnDownload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        sentMessage.setBackground(new java.awt.Color(240, 240, 240));
        sentMessage.setColumns(20);
        sentMessage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sentMessage.setRows(5);
        jScrollPane1.setViewportView(sentMessage);

        Message.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Message.setText("Your messages");
        Message.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Message.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MessageMouseEntered(evt);
            }
        });
        Message.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MessageKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MessageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MessageKeyTyped(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        client_Name.setBackground(new java.awt.Color(240, 240, 240));
        client_Name.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        client_Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        client_Name.setText("Client name");
        client_Name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        client_Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                client_NameMouseExited(evt);
            }
        });
        client_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_NameActionPerformed(evt);
            }
        });
        client_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                client_NameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                client_NameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                client_NameKeyTyped(evt);
            }
        });

        jLabel4.setText("Tên ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("...");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        Send.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Send.setText("Send");
        Send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SendMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SendMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        disConnect.setText("Ngắt kết nối");
        disConnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disConnectMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                disConnectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                disConnectMouseExited(evt);
            }
        });

        isConnnected.setText("Kết nối");
        isConnnected.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                isConnnectedMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                isConnnectedMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                isConnnectedMouseExited(evt);
            }
        });

        jButton1.setText("Ảnh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tên file", "Loại"
            }
        ));
        jScrollPane2.setViewportView(table);

        btnGui.setText("Gửi");
        btnGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnDownload.setText("Tải xuống");
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(client_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(isConnnected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(135, 135, 135)))
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Message, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(disConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnGui, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(37, 37, 37)
                                                        .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(imgPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(58, 58, 58)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(client_Name, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(isConnnected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(disConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imgPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGui)
                            .addComponent(btnHuy))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Message, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isConnnectedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_isConnnectedMouseClicked
        // TODO add your handling code here:
        //1571020100
        switch (client_Name.getText()) {
            case "":
                client_Name.setText("Input yuor name!!");
                break;
            case "Client name":
                client_Name.setText("Input yuor name!!");
                break;
            case "Input yuor name!!":
                break;
            default:
                jLabel5.setForeground(Color.GREEN);
                if (isConnected == false) {
                    username = client_Name.getText();
                    client_Name.setEditable(false);

                    try {
                        theSocket = new Socket(address, 2222);
                        InputStreamReader streamreader = new InputStreamReader(theSocket.getInputStream());
                        theReader = new BufferedReader(streamreader);
                        theWriter = new PrintWriter(theSocket.getOutputStream());
                        theWriter.println(username + ": has connected :Connect");
                        theWriter.flush();
                        isConnected = true;
                    } catch (Exception ex) {
                        sentMessage.append("Cannot Connect! Try Again. \n");
                        client_Name.setEditable(true);
                    }

                    ListenThread();

                } else if (isConnected == true) {
                    sentMessage.append("You are connected. \n");
                }

        }


    }//GEN-LAST:event_isConnnectedMouseClicked

    private void disConnectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disConnectMouseClicked
        // TODO add your handling code here:
        //1571020100
        sendDisconnect();
        jLabel5.setForeground(Color.black);
        Disconnect();
    }//GEN-LAST:event_disConnectMouseClicked

    private void SendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendMouseClicked
        //1571020100    
        switch (Message.getText()) {
            case "Your messages":
                Message.setText("Type your message here");
                Message.requestFocus();
                break;
            case "Client name":
                break;
            case "Input yuor name":
                break;
            default:
              try {
                theWriter.println(username + " : " + Message.getText() + ":" + "Chat");
                theWriter.flush();
            } catch (Exception ex) {
                sentMessage.append("You're not connected. \n");
            }
            Message.setText("");
            Message.requestFocus();

        }

        Message.setText("Your messages");
        Message.requestFocus();
    }//GEN-LAST:event_SendMouseClicked

    private void MessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MessageKeyPressed
        //1571020100       
        if (Message.getText().equals("Your messages"))
            Message.setText("");
    }//GEN-LAST:event_MessageKeyPressed

    private void client_NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_client_NameKeyPressed
        // TODO add your handling code here:
        //1571020100
        if (client_Name.getText().equals("Client name"))
            client_Name.setText("");
    }//GEN-LAST:event_client_NameKeyPressed

    private void isConnnectedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_isConnnectedMouseEntered
        // TODO add your handling code here:
        OOP.changeColor(jPanel4);
    }//GEN-LAST:event_isConnnectedMouseEntered

    private void isConnnectedMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_isConnnectedMouseExited
        // TODO add your handling code here:
        //1571020100
        OOP.NormalWhite(jPanel4);
        //tf_username.setText("Client name");
    }//GEN-LAST:event_isConnnectedMouseExited

    private void disConnectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disConnectMouseEntered
        // TODO add your handling code here:
        //1571020100
        OOP.changeColor(jPanel3);
    }//GEN-LAST:event_disConnectMouseEntered

    private void disConnectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disConnectMouseExited
        // TODO add your handling code here:
        //1571020100
        OOP.NormalWhite(jPanel3);
    }//GEN-LAST:event_disConnectMouseExited

    private void MessageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MessageMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_MessageMouseEntered

    private void client_NameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_client_NameMouseExited
    //1571020100
    }//GEN-LAST:event_client_NameMouseExited

    private void client_NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_client_NameKeyTyped
        // TODO add your handling code here: 
        //1571020100
        switch (client_Name.getText()) {
            case "Client name":
                client_Name.setText("");
                break;
            case "Input yuor name!!":
                client_Name.setText("");
            default:
        }
    }//GEN-LAST:event_client_NameKeyTyped

    private void client_NameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_client_NameKeyReleased
        // TODO add your handling code here:
        //1571020100
        switch (client_Name.getText()) {
            case "":
                client_Name.setText("Client name");
                break;
            default:
                String name = client_Name.getText();
                String result = name.substring(0, 1).toUpperCase() + name.substring(1);
                client_Name.setText(result);
        }

    }//GEN-LAST:event_client_NameKeyReleased

    private void SendMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendMouseEntered
        // TODO add your handling code here:
        //1571020100
        OOP.changeColor(jPanel5);
    }//GEN-LAST:event_SendMouseEntered

    private void SendMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendMouseExited
        // TODO add your handling code here:
        //1571020100
        OOP.NormalWhite(jPanel5);
    }//GEN-LAST:event_SendMouseExited

    private void MessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MessageKeyReleased
        // TODO add your handling code here:
        //1571020100
        switch (Message.getText()) {
            case "":
                Message.setText("Your messages");
                break;
            default:
                String name = Message.getText();
                String result = name.substring(0, 1).toUpperCase() + name.substring(1);
                Message.setText(result);
        }
    }//GEN-LAST:event_MessageKeyReleased

    private void MessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MessageKeyTyped
        // TODO add your handling code here:\

    }//GEN-LAST:event_MessageKeyTyped

    private void client_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_client_NameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    //1571020100
    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Image only", "jpg", "jpeg", "jfif", "png");
    fc.setFileFilter(filter);
    int result = fc.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fc.getSelectedFile();
        currentFile = selectedFile;
        imgPreview.setIcon(this.fitImageFromFile(imgPreview, selectedFile));
        //imgP
        btnGui.setVisible(true);
        btnHuy.setVisible(true);
//new Thread(new RunnableServerFile(selectedFile, true, 8888)).start();
    }    }//GEN-LAST:event_jButton1ActionPerformed
private void sendImage(String filePath) {
    //1571020100
    try {
        File file = new File(filePath);
        FileInputStream fis = new FileInputStream(file);
        byte[] imageData = new byte[(int) file.length()];
        fis.read(imageData);
        fis.close();

        String fileName = file.getName();
        String imageDataString = Base64.getEncoder().encodeToString(imageData);

        theWriter.println(username + " : " + fileName + " : " + imageDataString + " : Image");
        theWriter.flush();
    } catch (Exception ex) {
        // Xử lý nếu gặp lỗi khi gửi ảnh
    }
}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    //1571020100

        JFileChooser file = new JFileChooser();
    int result = file.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = file.getSelectedFile();
        try {
                new Thread(new RunnableServerFile(selectedFile, true, 8181, null)).start();
                theWriter.println(username + ": "+selectedFile.getName() +"#" +Files.probeContentType(selectedFile.toPath())+" :Upload_File");
                theWriter.flush();
            } catch (Exception e) {
            }
    }    }//GEN-LAST:event_jButton2ActionPerformed

    public ImageIcon fitImageFromFile(JLabel label, File file){
        BufferedImage img = null;
        try {
            img = ImageIO.read(file);
        } catch (IOException e) {
            System.err.println("[ImageUtils] Lỗi convert tỉ lệ ảnh " + e.getMessage());
        }
        if(img != null){
            Image dimg = img.getScaledInstance(label.getWidth(), label.getHeight(),
            Image.SCALE_SMOOTH);
            ImageIcon imageIcon = new ImageIcon(dimg);
            return imageIcon;
        }
        return null;
    }
    
    private void btnGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiActionPerformed
        btnHuy.setVisible(false);
        btnGui.setVisible(false);
        File file = currentFile;
        if(file != null){
            try {
                new Thread(new RunnableServerFile(file, true, 8181, null)).start();
                theWriter.println(username + ": "+file.getName() +"#" +Files.probeContentType(file.toPath())+" :Upload_File");
                theWriter.flush();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_btnGuiActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        btnHuy.setVisible(false);
        btnGui.setVisible(false);
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadActionPerformed
        int index = table.getSelectedRow();
        if(index != -1){
            String fileName = (String)table.getValueAt(index, 0);
            JFileChooser fc = new JFileChooser("./");
            fc.setCurrentDirectory(new File("./" + fileName.strip()));
            fc.showSaveDialog(null);
            File file = fc.getSelectedFile();
            if(file != null){
                String path = file.getPath();
                new Thread(new FileDownloader(path, fileName.strip(), 8282, null)).start();
            }
        } 
    }//GEN-LAST:event_btnDownloadActionPerformed
private void sendFile(String filePath) {
    //1571020100
    try {
        File file = new File(filePath);
        FileInputStream fis = new FileInputStream(file);
        byte[] fileData = new byte[(int) file.length()];
        fis.read(fileData);
        fis.close();

        String fileName = file.getName();
        String fileDataString = Base64.getEncoder().encodeToString(fileData);

        theWriter.println(username + " : " + fileName + " : " + fileDataString + " : File");
        theWriter.flush();
    } catch (Exception ex) {
        // Xử lý nếu gặp lỗi khi gửi file
    }

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //1571020100
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(theClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(theClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(theClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(theClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new theClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Message;
    private javax.swing.JLabel Send;
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnGui;
    private javax.swing.JButton btnHuy;
    private javax.swing.JTextField client_Name;
    private javax.swing.JLabel disConnect;
    private javax.swing.JLabel imgPreview;
    private javax.swing.JLabel isConnnected;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea sentMessage;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
 public class Message implements Runnable {
//1571020100
        @Override
        public void run() {
            String[] data;
            String stream;

            try {
                while (!(stream = theReader.readLine()).equals(null)) {
                    data = stream.split(":");

                    switch (data[2]) {
                        case "Chat":
                            sentMessage.append(data[0] + ":" + data[1] + "\n");
                            sentMessage.setCaretPosition(sentMessage.getDocument().getLength());
                            break;
                        case "Connnect":
                            sentMessage.removeAll();
                            userAdd(data[0]);
                            break;
                        case "Disconnect":
                            userRemove(data[0]);
                            break;
                        case "Done":
                            writeUsers();
                            users.clear();
                            break;
                        case "reloadFiles":{
                            String[] files = data[1].split("\\,");
                            DefaultTableModel model = (DefaultTableModel)table.getModel();
                            model.setRowCount(0);
                            for(String f : files){
                                model.addRow(new Object[]{f.split("\\#")[0], f.split("\\#")[1]});
                            }
                            break;
                        }
                            
                    }
                }
            } catch (Exception ex) {
            }
        }
    }
}
